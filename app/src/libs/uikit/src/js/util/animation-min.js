import{attr}from"./attr";import{Promise}from"./promise";import{once,trigger}from"./event";import{css,propName}from"./style";import{assign,startsWith,toNodes}from"./lang";import{addClass,hasClass,removeClass,removeClasses}from"./class";export function transition(n,t,i=400,e="linear"){return Promise.all(toNodes(n).map(n=>new Promise((a,s)=>{for(const i in t){const t=css(n,i);""===t&&css(n,i,t)}const o=setTimeout(()=>trigger(n,"transitionend"),i);once(n,"transitionend transitioncanceled",({type:t})=>{clearTimeout(o),removeClass(n,"uk-transition"),css(n,{"transition-property":"","transition-duration":"","transition-timing-function":""}),"transitioncanceled"===t?s():a()},!1,({target:t})=>n===t),addClass(n,"uk-transition"),css(n,assign({"transition-property":Object.keys(t).map(propName).join(","),"transition-duration":`${i}ms`,"transition-timing-function":e},t))})))}export const Transition={start:transition,stop:n=>(trigger(n,"transitionend"),Promise.resolve()),cancel(n){trigger(n,"transitioncanceled")},inProgress:n=>hasClass(n,"uk-transition")};const animationPrefix="uk-animation-",clsCancelAnimation="uk-cancel-animation";export function animate(n,t,i=200,e,a){return Promise.all(toNodes(n).map(n=>new Promise((s,o)=>{if(hasClass(n,clsCancelAnimation))return void requestAnimationFrame(()=>Promise.resolve().then(()=>animate(...arguments).then(s,o)));let r=`${t} ${animationPrefix}${a?"leave":"enter"}`;function m(){css(n,"animationDuration",""),removeClasses(n,`${animationPrefix}\\S*`)}startsWith(t,animationPrefix)&&(e&&(r+=` uk-transform-origin-${e}`),a&&(r+=` ${animationPrefix}reverse`)),m(),once(n,"animationend animationcancel",({type:t})=>{let i=!1;"animationcancel"===t?(o(),m()):(s(),Promise.resolve().then(()=>{i=!0,m()})),requestAnimationFrame(()=>{i||(addClass(n,clsCancelAnimation),requestAnimationFrame(()=>removeClass(n,clsCancelAnimation)))})},!1,({target:t})=>n===t),css(n,"animationDuration",`${i}ms`),addClass(n,r)})))}const inProgress=new RegExp(`${animationPrefix}(enter|leave)`);export const Animation={in:(n,t,i,e)=>animate(n,t,i,e,!1),out:(n,t,i,e)=>animate(n,t,i,e,!0),inProgress:n=>inProgress.test(attr(n,"class")),cancel(n){trigger(n,"animationcancel")}};